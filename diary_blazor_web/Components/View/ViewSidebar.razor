@using LumexUI.Common;

<div class="col-span-3 border-l border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 p-4 flex flex-col gap-4">
	<LumexCard Class="max-w-sm">
		<LumexCardHeader Class="justify-between">
			<div class="flex gap-2 items-center text-xl font-bold">
				<i class="fa-solid fa-user"></i>
				Giới thiệu
			</div>
		</LumexCardHeader>
		<LumexCardBody>
			<div @onclick="ViewProfile" class="flex gap-1 items-center mb-2 cursor-pointer mx-auto border py-1 px-5 rounded-lg hover:scale-105">
				<img class="w-12 h-12 object-cover" src="/images/user-image.jpg" />
				<div class="flex flex-col">
					<p class="font-semibold">@user.Fullname</p>
					<p class="text-sm text-gray-500">@user.Username</p>
				</div>
			</div>
			<div class="text-sm text-gray-500">
				@user.About
			</div>
		</LumexCardBody>
	</LumexCard>
	<LumexCard Class="max-w-sm">
		<LumexCardHeader Class="justify-between">
			<div class="flex gap-2 items-center text-xl font-bold">
				<i class="fa-solid fa-tags"></i>
				Nhãn
			</div>
		</LumexCardHeader>
		<LumexCardBody>
			<div class="flex flex-col gap-2 max-h-60 overflow-y-auto">
				<div class="flex justify-between" @onclick="() => OnHandleFilterTag.InvokeAsync()">
					<div class="px-3 py-1 rounded-full bg-gray-300 text-xs font-semibold cursor-pointer hover:scale-105">Tất cả</div>
					<div>@allDiaries.Count</div>
				</div>
				@foreach (Tag tag in allTags)
				{
					<div class="flex justify-between" @onclick="() => OnHandleFilterTag.InvokeAsync(tag.Id)">
						<div class="px-3 py-1 rounded-full bg-gray-300 text-xs font-semibold cursor-pointer hover:scale-105"><i class="fa-solid fa-tags"></i> @tag.Name</div>
						<div>@tag.Diaries.Where(d => d.IsPublic == 1 && d.IsActive == 1).ToList().Count</div>
					</div>
				}
			</div>
		</LumexCardBody>
	</LumexCard>

</div>

@code {
	// DiaryContext context = new DiaryContext();
	[Parameter] public EventCallback OnHandleFilterTag { get; set; }
	[Parameter] public string UserId { get; set; }
	private User user = new User();
	List<Tag> allTags = new List<Tag>();
	List<Diary> allDiaries = new List<Diary>();

	protected override void OnInitialized()
	{
		allDiaries = context.Diaries
		.Include(d => d.User)
		.Where(d => d.User.Id == UserId && d.IsPublic == 1 && d.IsActive == 1)
		.ToList();
		List<string> diaryIds = allDiaries.Select(d => d.Id).ToList();
		allTags = context.Tags
		.Include(t => t.Diaries)
		.Where(t => t.UserId == UserId)
		.ToList();
		user = context.Users.FirstOrDefault(u => u.Id == UserId);
	}

	private void ViewProfile()
	{
		NavigationManager.NavigateTo($"/profile/{UserId}");
	}
}